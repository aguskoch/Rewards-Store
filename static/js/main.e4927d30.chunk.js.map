{"version":3,"sources":["actions/constants.js","actions/getProducts.js","assets/coin.svg","assets/buy-blue.svg","actions/postRedeem.js","components/cards.js","actions/getUser.js","actions/postMorePoints.js","components/addCoins.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["headers","THOUSAND","FIVETHOUSAND","SEVENTHOUSAND","URL_GETPRODUCTS","URL_GETUSER","URL_POSTCOINS","URL_POSTREDEEM","a","fetch","method","response","json","data","console","log","getProducts","productId","body","JSON","stringify","postRedeem","Cards","props","useState","hovered","isHovered","className","style","width","onMouseOver","onMouseLeave","src","img","url","alt","name","type","onClick","_id","category","buy","cost","coin","getUser","amount","postMoreCoins","AddCoins","Header","React","modal","setModal","users","setUsers","useEffect","then","e","points","App","products","setProducts","map","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4927d30.chunk.js","sourcesContent":["export const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZWRkOWU5OTQ0NGZlNDAwNmRhOTkyNGQiLCJpYXQiOjE1OTE1ODIzNjF9.-f40dyUIGFsBSB_PTeBGdSLI58I21-QBJNi9wkODcKk\"\r\n}\r\n\r\nexport const THOUSAND = 1000\r\nexport const FIVETHOUSAND = 5000\r\nexport const SEVENTHOUSAND = 7500\r\n\r\nexport const URL_GETPRODUCTS = \"https://coding-challenge-api.aerolab.co/products\"\r\nexport const URL_GETUSER = \"https://coding-challenge-api.aerolab.co/user/me\"\r\nexport const URL_POSTCOINS = \"https://coding-challenge-api.aerolab.co/user/points\"\r\nexport const URL_POSTREDEEM = \"https://coding-challenge-api.aerolab.co/redeem\"\r\n","import {headers} from \"./constants\"\r\nimport {URL_GETPRODUCTS} from \"./constants\"\r\n\r\nasync function getProducts() {\r\n\r\n    try {\r\n        const response = await fetch(URL_GETPRODUCTS, { method: \"GET\", headers })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n}\r\n\r\nexport default getProducts","export default __webpack_public_path__ + \"static/media/coin.b8bc711d.svg\";","export default __webpack_public_path__ + \"static/media/buy-blue.c5c4f01c.svg\";","import {headers} from \"./constants\"\r\nimport {URL_POSTREDEEM} from \"./constants\"\r\n\r\nasync function postRedeem(productId) {\r\n    \r\n    try {\r\n        const response = await fetch(URL_POSTREDEEM, { method: \"POST\", headers, body: JSON.stringify({\"productId\": productId}) })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n\r\n}\r\n\r\nexport default postRedeem","import React, {useState} from \"react\"\r\nimport coin from \"../assets/coin.svg\"\r\nimport buy from \"../assets/buy-blue.svg\"\r\nimport postRedeem from \"../actions/postRedeem.js\"\r\n\r\n\r\nfunction Cards(props) {\r\n    \r\n    const [hovered, isHovered] = useState(false)\r\n\r\n    return (\r\n        <div \r\n            className=\"card\" \r\n            style={{ width: \"18rem\" }}\r\n            onMouseOver={() => isHovered(true)}\r\n            onMouseLeave={() => isHovered(false)}>\r\n            <img src={props.img.url} className={hovered ? \"img-hovered card-img-top\" : \"card-img-top\"} alt={props.name}/>\r\n            <button type=\"button\" className=\"btn btn-dark\"  onClick={() => postRedeem(props._id)}>Redeem now</button>\r\n            <div className=\"card-body\">\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">{props.category}</h6>\r\n                <h6 className=\"card-title\">{props.name}</h6>\r\n            </div>\r\n            {hovered ? \r\n            <div className=\"card-hovered\"> \r\n                <div className=\"buttons-card-hovered\"> \r\n                    <img className=\"buy\" src={buy} alt=\"buy\"/>\r\n                    <h5 className=\"card-cost\"> {props.cost} </h5> \r\n                    <img className=\"coin\" src={coin} alt=\"coin\"/>  \r\n                </div>\r\n               \r\n                \r\n            </div>: null}\r\n\r\n        </div> \r\n    )\r\n   \r\n}\r\n\r\nexport default Cards","import {headers} from \"./constants\"\r\nimport{URL_GETUSER} from \"./constants\"\r\n\r\nasync function getUser() {\r\n    \r\n    try {\r\n        const response = await fetch(URL_GETUSER, { method: \"GET\", headers })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n}\r\n\r\nexport default getUser","import {headers} from \"./constants\"\r\nimport {URL_POSTCOINS} from \"./constants\"\r\n\r\nasync function postMoreCoins(amount) {\r\n    \r\n\r\n    try {\r\n        console.log(amount)\r\n        const response = await fetch(URL_POSTCOINS, { method: \"POST\", headers, body: JSON.stringify({\"amount\": amount}) })\r\n        console.log(response, amount)\r\n        const data = await response.json()\r\n        console.log(data, amount)\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n\r\n}\r\n\r\nexport default postMoreCoins","import React from \"react\"\r\nimport coin from \"../assets/coin.svg\"\r\nimport postMoreCoins from \"../actions/postMorePoints\"\r\nimport { THOUSAND, FIVETHOUSAND, SEVENTHOUSAND} from \"../actions/constants\"\r\n\r\nfunction AddCoins() {\r\n    return (\r\n        <div>\r\n            <h4> Add more coins </h4>\r\n            <button onClick= {() => postMoreCoins(THOUSAND)}>\r\n                <img src={coin} alt={THOUSAND} />\r\n                {THOUSAND}\r\n            </button>\r\n            <button onClick= {() => postMoreCoins(FIVETHOUSAND)}>\r\n                <img src={coin} alt={FIVETHOUSAND} />\r\n                {FIVETHOUSAND}\r\n            </button>\r\n            <button onClick= {() => postMoreCoins(SEVENTHOUSAND)}>\r\n                <img src={coin} alt={SEVENTHOUSAND}  />\r\n                {SEVENTHOUSAND}\r\n            </button>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default AddCoins","import React from \"react\"\r\nimport getUser from \"../actions/getUser\"\r\nimport AddCoins from \"../components/addCoins\"\r\n\r\n\r\nfunction Header() {\r\n\r\n    //usar un context que tome el usuario entonces cada vez que cambie el estado va a renderear\r\n    const [modal, setModal ] = React.useState (false)\r\n    \r\n    const [users, setUsers] = React.useState([])\r\n    React.useEffect(() => {\r\n        getUser().then(e => setUsers(e));\r\n    },[users]);\r\n\r\n    return (\r\n        <section className=\"header\">\r\n            <h6> {users.name} </h6>\r\n            <button onClick = {() => setModal(true)} > {users.points} </button>\r\n            {modal ? \r\n            <AddCoins/> : null}\r\n            <div className=\"container-header\">\r\n                <h6 className=\"title-header\"> Electronics </h6>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useEffect, useState } from \"react\";\nimport getProducts from \"./actions/getProducts\";\nimport Cards from \"./components/cards\"\nimport Header from \"./components/header\"\nimport \"./styles.css\"\n\nfunction App() {\n\n  \n  const [products, setProducts] = useState([])\n\n  useEffect(() => {\n    getProducts().then(e => setProducts(e));\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {<div className=\"container-cards\">\n        {products.map((data, id) => {\n          return <Cards key={id} {...data} />\n        })}\n\n        </div>}\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}